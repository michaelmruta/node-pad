module.exports = function(RED) {
    "use strict";
    
    var bodyParser = require("body-parser");
    var jsonParser = bodyParser.json();
    var once = false

    function Location(n) {

        RED.nodes.createNode(this,n);
        this.topic = n.topic;
        var node = this;

        var payload = {heading:{},location:{}}
        var limiter = false

        setInterval(function() {
            limiter = false
        },1000)

        if(!once) {
            RED.httpNode.post("/location", jsonParser, function(req,res) {
                if(req.headers.host == "127.0.0.1:1880") {
                    if(req.query.t == "heading") {
                        payload.heading = req.body
                    }
                    if(req.query.t == "location") {
                        payload.location = req.body
                    }
                    payload.timestamp = new Date();

                    if(!limiter) {
                        node.send({_msgid:RED.util.generateId(), payload:payload})
                        limiter = true
                    }
                }
                res.end()
            });
            once = true
        }

        this.on("close",function() {
            RED.httpNode._router.stack.forEach(function(route,i,routes) {
                if (route.route && route.route.path === '/location' && route.route.methods['post']) {
                    routes.splice(i,1);
                }
                once = false;
            });
        });

    }

    RED.nodes.registerType("location",Location);
}
